{"version":3,"sources":["components/Todo.js","components/Form.js","components/FilterButton.js","App.js","index.js"],"names":["Todo","props","useState","isEditing","setEditing","newName","setNewName","wasEditing","value","ref","useRef","useEffect","current","usePrevious","editFieldRef","editButtonRef","focus","editingTemplate","className","onSubmit","e","preventDefault","editTask","id","htmlFor","name","type","onChange","target","onClick","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","Form","setName","addTask","autoComplete","FilterButton","isPressed","setFilter","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","updatedTasks","map","remainingTasks","editedTaskList","taskList","filterList","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","newTask","nanoid","tabIndex","role","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb99dc85.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst Todo = (props) => {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n\n  const wasEditing = usePrevious(isEditing);\n\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName('');\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <form className='stack-small' onSubmit={handleSubmit}>\n      <div className='form-group'>\n        <label className='todo-label' htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input\n          id={props.id}\n          className='todo-text'\n          type='text'\n          value={newName}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n      </div>\n      <div className='btn-group'>\n        <button\n          type='button'\n          className='btn todo-cancel'\n          onClick={() => setEditing(false)}\n        >\n          Cancel\n          <span className='visually-hidden'>renaming {props.name}</span>\n        </button>\n        <button type='submit' className='btn btn__primary todo-edit'>\n          Save\n          <span className='visually-hidden'>new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n  const viewTemplate = (\n    <div className='stack-small'>\n      <div className='c-cb'>\n        <input\n          id={props.id}\n          type='checkbox'\n          defaultChecked={props.completed}\n          onChange={() => props.toggleTaskCompleted(props.id)}\n        />\n        <label className='todo-label' htmlFor={props.id}>\n          {props.name}\n        </label>\n      </div>\n      <div className='btn-group'>\n        <button\n          type='button'\n          className='btn'\n          onClick={() => setEditing(true)}\n          ref={editButtonRef}\n        >\n          Edit <span className='visually-hidden'>{props.name}</span>\n        </button>\n        <button\n          type='button'\n          className='btn btn__danger'\n          onClick={() => props.deleteTask(props.id)}\n        >\n          Delete <span className='visually-hidden'>{props.name}</span>\n        </button>\n      </div>\n    </div>\n  );\n\n  return <li className='todo'>{isEditing ? editingTemplate : viewTemplate}</li>;\n};\n\nexport default Todo;\n","import React, { useState } from 'react';\n\nconst Form = (props) => {\n  const [name, setName] = useState('');\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.addTask(name);\n    setName('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className='label-wrapper'>\n        <label htmlFor='new-todo-input' className='label__lg'>\n          What needs to be done?\n        </label>\n      </h2>\n      <input\n        type='text'\n        id='new-todo-input'\n        className='input input__lg'\n        name='text'\n        autoComplete='off'\n        value={name}\n        onChange={handleChange}\n      />\n      <button type='submit' className='btn btn__primary btn__lg'>\n        Add\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from 'react';\n\nfunction FilterButton(props) {\n  return (\n    <button\n      type='button'\n      className='btn toggle-btn'\n      aria-pressed={props.isPressed}\n      onClick={() => props.setFilter(props.name)}\n    >\n      <span className='visually-hidden'>Show </span>\n      <span>{props.name}</span>\n      <span className='visually-hidden'> tasks</span>\n    </button>\n  );\n}\n\nexport default FilterButton;\n","import './App.css';\nimport Todo from './components/Todo';\nimport Form from './components/Form';\nimport FilterButton from './components/FilterButton';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { nanoid } from 'nanoid';\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, name: newName };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map((task) => (\n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n    ));\n\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  function addTask(name) {\n    const newTask = { id: 'todo-' + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  return (\n    <div className='App'>\n      <h1>To Do List</h1>\n      <Form addTask={addTask} />\n      <div className='filters btn-group stack-exception'>{filterList}</div>\n      <h2 id='list-heading' tabIndex='-1' ref={listHeadingRef}>\n        {headingText}\n      </h2>\n      <ul\n        role='list'\n        className='todo-list stack-large stack-exception'\n        aria-labelledby='list-heading'\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst DATA = [\n  { id: 'todo-0', name: 'Eat', completed: true },\n  { id: 'todo-1', name: 'Sleep', completed: false },\n  { id: 'todo-2', name: 'Repeat', completed: false }\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}